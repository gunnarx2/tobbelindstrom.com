@import '~styles/settings/variables';
@import '~styles/tools/mixins/respond-to';
@import '~styles/tools/mixins/get-font-styles';

$toggle-size: map-get($spacings, xl) * 1.4936;

.root {
  position: fixed;
  z-index: 1337;
  right: 0;
  left: 0;
  bottom: $container-padding-sides;
}

.inner {
  transform: translateZ(0);
}

.toggle {
  position: absolute;
  z-index: 1;
  right: 0;
  bottom: 0;
  background-color: var(--color-primary);
  width: $toggle-size;
  height: $toggle-size;
  border-radius: 50%;
  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 3px -2px, rgba(0, 0, 0, 0.25) 0 3px 4px 0, rgba(0, 0, 0, 0.125) 0 1px 8px 0;
  transition: background-color map-get($durations, fast) map-get($easings, ease);

  &:hover,
  :global(body.is-tabbing) &:focus {
    background-color: var(--color-primary-darken);

    @media (hover:none), (hover:on-demand) {
      background-color: var(--color-primary);
    }
  }

  svg {
    $svg-size: map-get($spacings, sm) * 1.28;
    fill: var(--color-pi);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: rotate(0deg);
    margin-left: -#{$svg-size / 2};
    margin-top: -#{$svg-size / 2};
    width: $svg-size;
    height: $svg-size;
    pointer-events: none;
    user-select: none;
    transition: transform map-get($durations, fast) map-get($easings, in-out-circ);

    .open & {
      transform: rotate(135deg);
    }
  }
}

.actions {
  position: absolute;
  right: 0;
  bottom: $toggle-size;
  width: $toggle-size;
  visibility: hidden;
  opacity: 0;
  transition: map-get($durations, fast) map-get($easings, in-out-circ);
  transition-property: visibility, opacity;

  .open & {
    visibility: visible;
    opacity: 1;
  }
}

.action {
  $margin: (map-get($spacings, sm) * 0.66);
  $height: $toggle-size - $margin;

  position: absolute;
  right: $margin / 2;
  left: $margin / 2;
  height: $height;
  bottom: 0;
  transition: transform map-get($durations, fast) map-get($easings, in-out-circ);

  svg {
    fill: var(--color-pi);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &:nth-child(1) {
    bottom: $margin;
    transform: translateY(100%);

    svg {
      $svg-size: 42.5%;
      width: $svg-size;
      height: $svg-size;
    }
  }

  &:nth-child(2) {
    bottom: $height + ($margin * 2);
    transform: translateY(200%);
  }

  &:nth-child(3) {
    bottom: ($height * 2) + ($margin * 3);
    transform: translateY(300%);

    svg {
      $svg-size: 47.5%;
      width: $svg-size;
      height: $svg-size;
    }
  }

  .open & {
    transform: translateY(0);
  }
}

.actionButton {
  position: relative;
  background-color: var(--color-primary);
  border-radius: 50%;
  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 3px -2px, rgba(0, 0, 0, 0.25) 0 3px 4px 0, rgba(0, 0, 0, 0.125) 0 1px 8px 0;
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  transition: background-color map-get($durations, fast) map-get($easings, ease);

  &:hover,
  :global(body.is-tabbing) &:focus {
    background-color: var(--color-primary-darken);

    @media (hover:none), (hover:on-demand) {
      background-color: var(--color-primary);
    }
  }

  * {
    pointer-events: none;
    user-select: none;
  }
}

.actionButtonSun,
.actionButtonMoon {
  opacity: 0;
  visibility: hidden;
  transform: rotate(90deg);
  backface-visibility: hidden;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: map-get($durations, fast) map-get($easings, ease);
  transition-property: visibility, opacity, transform;
}

.actionButtonSun {
  svg {
    $svg-size: 42.5%;
    width: $svg-size;
    height: $svg-size;
  }

  :global(body.dark-theme) & {
    opacity: 1;
    visibility: visible;
    transform: rotate(0);
  }
}

.actionButtonMoon {
  svg {
    $svg-size: 35%;
    margin-top: $svg-size * 0.05;
    width: $svg-size;
    height: $svg-size;
  }

  :global(body.light-theme) & {
    opacity: 1;
    visibility: visible;
    transform: rotate(0);
  }
}

.actionButtonLabel {
  position: absolute;
  top: 50%;
  right: 100%;
  transform: translate(0, -50%);
  color: var(--color-beta);
  white-space: nowrap;
  background-color: var(--color-nu);
  @include get-font-styles(helsinki);
  padding: 0.25em 0.5em 0.3em;
  border-radius: 0.4em;
  margin-right: 0;
  visibility: hidden;
  opacity: 0;
  transition: map-get($durations, fast) map-get($easings, ease);
  transition-property: visibility, opacity, transform, color, background-color, box-shadow;

  :global(body.dark-theme) & {
    box-shadow: rgba(0, 0, 0, 0.5) 0 3px 3px -2px, rgba(0, 0, 0, 0.25) 0 3px 4px 0, rgba(0, 0, 0, 0.125) 0 1px 8px 0;
  }

  :global(body.light-theme) & {
    box-shadow: rgba(0, 0, 0, 0.25) 0 3px 3px -2px, rgba(0, 0, 0, 0.125) 0 3px 4px 0, rgba(0, 0, 0, 0.075) 0 1px 8px 0;
  }

  @mixin show-label() {
    visibility: visible;
    opacity: 1;
    transform: translate(-#{map-get($spacings, xs) * 0.75}, -50%);
  }

  .actionButton:hover &,
  :global(body.is-tabbing) .actionButton:focus & {
    @include show-label();
  }

  @media (hover:none), (hover:on-demand) {
    @include show-label();
  }
}
