@import '~styles/settings/variables';
@import '~styles/tools/mixins/respond-to';
@import '~styles/tools/mixins/get-font-styles';
@import '~styles/tools/mixins/styled-links';

.root {
  position: fixed;
  z-index: 1337;
  right: 0;
  left: 0;
  top: $container-padding-sides;

  @include respond-to(sm) {
    top: auto;
    bottom: $container-padding-sides;
  }
}

.inner {
  transform: translateZ(0);
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: rgba(0, 0, 0, 0.5) 0 3px 3px -2px, rgba(0, 0, 0, 0.25) 0 3px 4px 0, rgba(0, 0, 0, 0.125) 0 1px 8px 0;
  border-radius: map-get($spacings, sm);
  overflow: hidden;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-#{$container-padding-sides});
  transition: map-get($durations, medium) map-get($easings, ease);
  transition-property: transform, visibility, opacity, background-color;

  @include respond-to(sm) {
    top: auto;
    right: auto;
    bottom: 0;
    transform: translateY($container-padding-sides);
  }
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    height: 4px;
    background-color: var(--color-primary);
  }

  .active & {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
}

.background {
  background-color: var(--color-kappa);
  padding: map-get($spacings, lg);
  transition: background-color map-get($durations, fast) map-get($easings, ease);
}

.title {
  @include get-font-styles(moscow);
}

.buttons {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.reload {
  background-color: transparent;
  @include styled-links();
}

.separator {
  flex: 1;
}

.close {
  background-color: transparent;
  color: var(--color-epsilon);
  transition: color map-get($durations, fast) map-get($easings, ease);

  &:hover,
  :global(body.is-tabbing) &:focus {
    color: var(--color-beta);

    @media (hover:none), (hover:on-demand) {
      color: var(--color-epsilon);
    }
  }
}
